imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app_locales: en|ar
    locale: ar
    app.company.logo_path: "%kernel.root_dir%/../web/files/company/logo"
    app.company.discount_path: "%kernel.root_dir%/../web/files/company/discounts"
    locale_supported: ['en','es','zh']
framework:
    #esi:             ~
    translator:      { fallbacks: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  'ar'
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    serializer:
        enabled: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    form_themes: ['bootstrap_3_layout.html.twig']

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
            set: string
            varbinary: string
            tinyblob: text
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
boekkooi_jquery_validation:
    form:
        enabled: true # Set to false to disable the form constraints being parsed/converted by default
        additionals: # Set to true if jquery validate additional-method.js is included
            accept: false
            ipv4: false
            ipv6: false
            iban: false
            luhn: false
            pattern: false
            time: false
            one_or_other: false
            required_group: false
    twig:
        enabled: true # Register the twig extension

#Rest config
fos_rest:
    routing_loader:
        default_format: json
    param_fetcher_listener: true
    view:
        view_response_listener: "force"
        formats:
            json: true
            xml:  true
        templating_formats:
            html: true
    format_listener:
        rules:
            - { path: ^/(%app_locales%)/api/, priorities: [ json, xml ], fallback_format: json, prefer_extension: true }
            - { path: ^/, priorities: ['text/html', '*/*'], fallback_format: html, prefer_extension: false}
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
            'AppBundle\Exception\BadRequestDataException': HTTP_BAD_REQUEST
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
            #'SGalinski\TypoScriptBackendBundle\Exception\BadRequestDataException': true
    allowed_methods_listener: false
    access_denied_listener:
        json: true
    body_listener: true
    disable_csrf_role: ROLE_API


